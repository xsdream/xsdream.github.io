Visual Studio Code是我写代码时的不二之选。

每个人都有他自己喜欢的文本编辑器，我也不例外。不过，我还是想把这些扩展程序介绍给你，
而它们对你所使用的大多数编辑器都适用。看看我最喜欢的扩展程序有哪些：
Auto Rename Tag?――自动重命名成对的HTML标记。假如你创建了一个<p>标记。现在你想更改它。
		有了这个软件，你只需要更改一个就行，另一个会自动修改。从理论上来说，使用这个软件可以把你的工作效率提升一倍。
HTML CSS Support?――HTML文档的CSS支持工具。该工具在获得一些简洁的语法高亮显示和代码
		建议方面非常有用。
HTML Snippets?――这一工具在代码分段方面非常有用，可以为你节省大量的时间。它能跟Emmet
		配对，这样一来你甚至都不用再真正键入HTML了。
Babel ES6/ES7?――JavaScript Babel的辅助工具。如果你用的是Babel，这个工具可以让你更
		容易区分代码。如果你喜欢JavaScript，那务必也不要错过这款软件。
Bracket Pair Colorizer?――色彩可视化工具。如果你没有准确地括号，那这个工具对
		于发现因此导致的许多常见漏洞十分方便。
ESLint?――你在编写代码的时候，利用这个软件可以轻易获取有关漏洞的提示，而且在
		编码过程中，它还可以帮助你养成良好的编码习惯。
Guides?――这一工具可以被用来添加额外的指导行代码。这是另一个视觉提示，以确保
		你正确地括号了。
JavaScript Console Utils?――使控制台日志记录变得更为简单可行。如果你像大多
		数开发人员一样，你会发现自己需要在调试流中登录到控制台（我知道我们应该使用调试器）。这个实用的程序使得创建有用的console.log()语句变得易如反掌。
Code Spell Checker?――这一工具正如其名，是拼写检查程序。漏洞的的另一个常见
		来源是变量或函数名。这一拼写检查工具可以查找不常见的单词，而且还可以把我们用JavaScript编写的东西进行有效的审核。
Git Lens?――可以让我们对某文件何时、以及由何人进行更改变得一目了然。当代码
		被破坏时，我们就能找到该负责任的人，而不是让你当替罪羊了。
Path Intellisense?――文件路径自动完成程序。这样一来从其他文件中导入重要的
		东西就非常方便了。这一工具使文件导航变得轻而易举。
Prettier?――自动代码格式化程序。忘掉那些你不得不手动缩进代码的日子吧，有了
		这个工具，事情就变得简单多啦。这个程序会比你自己做得更快更好。对这个程序我是鼎力推荐的。
VSCode-Icons?――将图标添加到文件谱中。如果文件结构非常不科学，你的眼睛想罢
		工的话，这个程序可能会有所帮助。它对于你正在制作的任何文件都能提供有用的图标辅助，能使你更为轻易地区分看到的内容。