*方法：
js对象中的函数，称之为方法：var obj（）{
				name:'xusheng'
				age:function(){
					console.log(this.name)  //this指向window，所以不会打印出xusheng  	
				    }
			    }
*this的设计缺陷：
以上的demo说明了JS的this设计缺陷，居然指向了window对象


function getAge() {
    return this.birth;
}

var xiaoming = {
    name: '小明',
    birth: 1990,
    age: getAge
};
console.log(xiaoming.age());// 1990  若用   对象.方法（）  调用，那么this会指向正确的对象


*apply() call()  ES6:
Demo先行：
var obj = {
    name : 'linxin'
}

function func(firstName, lastName){
    console.log(firstName + ' ' + this.name + ' ' + lastName);
}
func.apply(obj, ['A', 'B']); 
首先，我们调用的是func函数，我们希望this指向的是obj这个对象，所以apply的第一个参数就是obj，至于第二个参数数组，是我们原本调用函数的参数

func.call(obj, A, B]);   用call就是单个参数传入了

总结：apply的作用：1.改变this的指向  2.借用别的对象的方法（被调用函数.call（this）） 3.调用函数  apply会让函数立即执行的 


	